@page "/cars"
@using CarShowcase.Models
@using CarShowcase.Services
@using CarShowcase.Components
@inject ICarService CarService

<PageTitle>All Cars - Car Showcase</PageTitle>

<div class="container mt-4">
    <PageHeader Title="Our Car Collection"
                Subtitle="Browse through our premium selection of vehicles"
                Icon="list-rich"
                ShowBadge="true"
                BadgeText="@(cars?.Count.ToString() ?? "0")"
                BadgeClass="bg-info"
                Breadcrumbs="@breadcrumbs"
                Actions="@pageActions" />

    <SearchFilters Makes="@makes"
                   SelectedMake="@selectedMake"
                   SelectedModel="@selectedModel"
                   MinYear="@minYear"
                   MaxYear="@maxYear"
                   MaxPrice="@maxPrice"
                   ShowFuelTypeFilter="true"
                   ShowTransmissionFilter="true"
                   OnFiltersChanged="OnFilterChanged"
                   OnClearFilters="OnClearFilters"
                   CssClass="mb-4" />

    <CarGrid Cars="@cars"
             Size="GridSize.Medium"
             ShowCarDetails="true"
             ShowCarQuickActions="true"
             ShowSortOptions="true"
             ShowPagination="true"
             ItemsPerPage="12"
             OnCarFavorite="HandleCarFavorite"
             OnCarShare="HandleCarShare"
             OnEmptyStateAction="OnClearFilters" />
</div>

@code {
    private List<Car>? cars;
    private List<string>? makes;
    private string selectedMake = "";
    private string selectedModel = "";
    private int? minYear;
    private int? maxYear;
    private decimal? maxPrice;

    private List<BreadcrumbItem> breadcrumbs =
    [
        new BreadcrumbItem { Text = "Home", Url = "/" },
        new BreadcrumbItem { Text = "Cars", Url = "/cars", IsActive = true }
    ];

    private List<PageAction> pageActions =
    [
        new PageAction { Text = "Add Car", Icon = "plus", CssClass = "btn-success", IsButton = true },
        new PageAction { Text = "Export", Icon = "data-transfer-download", CssClass = "btn-outline-primary", IsButton = true }
    ];

    protected override async Task OnInitializedAsync()
    {
        makes = await CarService.GetMakesAsync();
        await LoadCars();
    }

    private async Task OnFilterChanged()
    {
        await LoadCars();
    }

    private async Task OnClearFilters()
    {
        selectedMake = "";
        selectedModel = "";
        minYear = null;
        maxYear = null;
        maxPrice = null;
        await LoadCars();
    }

    private async Task LoadCars()
    {
        cars = await CarService.SearchCarsAsync(
            make: string.IsNullOrEmpty(selectedMake) ? null : selectedMake,
            model: string.IsNullOrEmpty(selectedModel) ? null : selectedModel,
            minYear: minYear,
            maxYear: maxYear,
            maxPrice: maxPrice
        );
    }

    private async Task HandleCarFavorite(Car car)
    {
        // TODO: Implement favorite functionality
        await Task.CompletedTask;
    }

    private async Task HandleCarShare(Car car)
    {
        // TODO: Implement share functionality
        await Task.CompletedTask;
    }
}
