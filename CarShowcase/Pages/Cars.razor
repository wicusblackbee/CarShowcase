@page "/cars"
@using CarShowcase.Models
@using CarShowcase.Services
@inject ICarService CarService

<PageTitle>All Cars - Car Showcase</PageTitle>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <h1>Our Car Collection</h1>
            <p class="lead">Browse through our premium selection of vehicles</p>
        </div>
    </div>

    <!-- Search Filters -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Search Filters</h5>
                    <div class="row">
                        <div class="col-md-3">
                            <label for="makeFilter" class="form-label">Make</label>
                            <select id="makeFilter" class="form-select" @bind="selectedMake" @bind:after="OnFilterChanged">
                                <option value="">All Makes</option>
                                @if (makes != null)
                                {
                                    @foreach (var make in makes)
                                    {
                                        <option value="@make">@make</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="minYear" class="form-label">Min Year</label>
                            <input type="number" id="minYear" class="form-control" @bind="minYear" @bind:after="OnFilterChanged" min="1990" max="2024" />
                        </div>
                        <div class="col-md-3">
                            <label for="maxYear" class="form-label">Max Year</label>
                            <input type="number" id="maxYear" class="form-control" @bind="maxYear" @bind:after="OnFilterChanged" min="1990" max="2024" />
                        </div>
                        <div class="col-md-3">
                            <label for="maxPrice" class="form-label">Max Price</label>
                            <input type="number" id="maxPrice" class="form-control" @bind="maxPrice" @bind:after="OnFilterChanged" min="0" step="1000" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Car Grid -->
    @if (cars == null)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!cars.Any())
    {
        <div class="alert alert-info" role="alert">
            No cars found matching your criteria. Please adjust your filters.
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var car in cars)
            {
                <div class="col-md-4 col-lg-3 mb-4">
                    <div class="card h-100">
                        <img src="@car.ImageUrl" class="card-img-top" alt="@car.Make @car.Model" style="height: 200px; object-fit: cover;">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@car.Year @car.Make @car.Model</h5>
                            <p class="card-text text-muted">@car.Color • @car.Mileage.ToString("N0") miles</p>
                            <p class="card-text">@car.FuelType • @car.Transmission</p>
                            <div class="mt-auto">
                                <p class="h5 text-primary mb-2">$@car.Price.ToString("N0")</p>
                                <a href="/car/@car.Id" class="btn btn-primary w-100">View Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Car>? cars;
    private List<string>? makes;
    private string selectedMake = "";
    private int? minYear;
    private int? maxYear;
    private decimal? maxPrice;

    protected override async Task OnInitializedAsync()
    {
        makes = await CarService.GetMakesAsync();
        await LoadCars();
    }

    private async Task OnFilterChanged()
    {
        await LoadCars();
    }

    private async Task LoadCars()
    {
        cars = await CarService.SearchCarsAsync(
            make: string.IsNullOrEmpty(selectedMake) ? null : selectedMake,
            minYear: minYear,
            maxYear: maxYear,
            maxPrice: maxPrice
        );
    }
}
