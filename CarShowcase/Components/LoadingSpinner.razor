<div class="loading-container @CssClass">
    @if (ShowCard)
    {
        <div class="card">
            <div class="card-body text-center py-5">
                <div class="spinner-container">
                    <div class="spinner-border @SpinnerClass" role="status">
                        <span class="visually-hidden">@LoadingText</span>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Message))
                {
                    <p class="mt-3 mb-0 text-muted">@Message</p>
                }
            </div>
        </div>
    }
    else
    {
        <div class="text-center @ContainerClass">
            <div class="spinner-container">
                <div class="spinner-border @SpinnerClass" role="status">
                    <span class="visually-hidden">@LoadingText</span>
                </div>
            </div>
            @if (!string.IsNullOrEmpty(Message))
            {
                <p class="mt-3 mb-0 text-muted">@Message</p>
            }
        </div>
    }
</div>



@code {
    [Parameter] public string CssClass { get; set; } = "";
    [Parameter] public string ContainerClass { get; set; } = "py-5";
    [Parameter] public string SpinnerClass { get; set; } = "text-primary";
    [Parameter] public string LoadingText { get; set; } = "Loading...";
    [Parameter] public string Message { get; set; } = "";
    [Parameter] public bool ShowCard { get; set; } = false;
    [Parameter] public SpinnerSize Size { get; set; } = SpinnerSize.Medium;
    
    protected override void OnParametersSet()
    {
        SpinnerClass = Size switch
        {
            SpinnerSize.Small => $"spinner-sm {SpinnerClass}",
            SpinnerSize.Large => $"spinner-lg {SpinnerClass}",
            _ => SpinnerClass
        };
    }
}


