name: Build, Test, and Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test with coverage
      run: dotnet test CarShowcase.Tests --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory:TestResults
    
    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
    
    - name: Generate coverage report
      run: reportgenerator -reports:"TestResults/*/coverage.cobertura.xml" -targetdir:"TestResults/CoverageReport" -reporttypes:Html
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: TestResults/*/coverage.cobertura.xml
        fail_ci_if_error: false
    
    - name: Check coverage threshold
      run: |
        COVERAGE=$(grep -o 'line-rate="[^"]*"' TestResults/*/coverage.cobertura.xml | head -1 | grep -o '[0-9.]*')
        COVERAGE_PERCENT=$(echo "$COVERAGE * 100" | bc -l | cut -d. -f1)
        echo "Code coverage: $COVERAGE_PERCENT%"
        if [ "$COVERAGE_PERCENT" -lt 70 ]; then
          echo "‚ùå Code coverage ($COVERAGE_PERCENT%) is below the required 70% threshold"
          exit 1
        else
          echo "‚úÖ Code coverage ($COVERAGE_PERCENT%) meets the 70% threshold"
        fi
    
    - name: Create deployment package
      run: |
        mkdir -p deploy
        
        # Create a simple HTML page showcasing the project
        cat > deploy/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Car Showcase - Blazor Application</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
            <style>
                .hero-section {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    padding: 100px 0;
                    text-align: center;
                }
                .feature-card {
                    transition: transform 0.3s;
                }
                .feature-card:hover {
                    transform: translateY(-5px);
                }
                .coverage-badge {
                    display: inline-block;
                    padding: 0.5rem 1rem;
                    background: #28a745;
                    color: white;
                    border-radius: 0.5rem;
                    font-weight: bold;
                }
            </style>
        </head>
        <body>
            <div class="hero-section">
                <div class="container">
                    <h1 class="display-4">Car Showcase</h1>
                    <p class="lead">A modern Blazor Server application for showcasing premium vehicles</p>
                    <div class="mt-4">
                        <span class="coverage-badge">‚úÖ 75%+ Test Coverage</span>
                        <span class="coverage-badge ms-2">üß™ 71 Passing Tests</span>
                    </div>
                </div>
            </div>
            
            <div class="container mt-5">
                <div class="row">
                    <div class="col-md-4 mb-4">
                        <div class="card feature-card h-100">
                            <div class="card-body text-center">
                                <h5 class="card-title">üöó Car Management</h5>
                                <p class="card-text">Complete CRUD operations for managing car inventory with search and filtering capabilities.</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 mb-4">
                        <div class="card feature-card h-100">
                            <div class="card-body text-center">
                                <h5 class="card-title">üß™ Comprehensive Testing</h5>
                                <p class="card-text">71 unit tests covering models, services, and Blazor components with 75%+ code coverage.</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 mb-4">
                        <div class="card feature-card h-100">
                            <div class="card-body text-center">
                                <h5 class="card-title">üé® Modern UI</h5>
                                <p class="card-text">Responsive Bootstrap-based design with interactive components and smooth user experience.</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row mt-5">
                    <div class="col-md-12">
                        <h2 class="text-center mb-4">Technical Features</h2>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <h4>üèóÔ∏è Architecture</h4>
                        <ul>
                            <li>Blazor Server with .NET 8</li>
                            <li>Clean Architecture with Services</li>
                            <li>Dependency Injection</li>
                            <li>Interface-based Design</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h4>üîß Testing Stack</h4>
                        <ul>
                            <li>xUnit Testing Framework</li>
                            <li>bUnit for Blazor Components</li>
                            <li>Moq for Mocking</li>
                            <li>Coverlet for Code Coverage</li>
                        </ul>
                    </div>
                </div>
                
                <div class="row mt-4">
                    <div class="col-md-12 text-center">
                        <h4>üìä Test Coverage Report</h4>
                        <p>View the detailed test coverage analysis:</p>
                        <a href="coverage/index.html" class="btn btn-primary btn-lg">View Coverage Report</a>
                    </div>
                </div>
            </div>
            
            <footer class="bg-dark text-white text-center py-4 mt-5">
                <div class="container">
                    <p>&copy; 2025 Car Showcase - Built with Blazor Server and comprehensive testing</p>
                </div>
            </footer>
            
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        </body>
        </html>
        EOF
        
        # Copy coverage report
        cp -r TestResults/CoverageReport deploy/coverage
        
        # Create a README for the deployment
        cat > deploy/README.md << 'EOF'
        # Car Showcase - Blazor Application
        
        This is a demonstration of a modern Blazor Server application with comprehensive testing.
        
        ## Features
        - Car inventory management
        - Search and filtering
        - Responsive design
        - 75%+ test coverage
        - 71 passing tests
        
        ## Technology Stack
        - Blazor Server (.NET 8)
        - xUnit + bUnit + Moq
        - Bootstrap 5
        - GitHub Actions CI/CD
        
        ## Test Coverage
        The application maintains high code quality with comprehensive test coverage.
        View the detailed coverage report in the coverage/ directory.
        EOF
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./deploy
        cname: # Add your custom domain here if you have one
